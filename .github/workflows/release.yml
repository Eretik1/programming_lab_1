name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload Linux Asset
        uses: actions/upload-artifact@v2
        with:
          name: linux-deb
          path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb

  build_macos:
    runs-on: macos-latest
    needs: build  
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: brew install boost
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Upload macOS Asset
        uses: actions/upload-artifact@v2
        with:
          name: macos-zip
          path: ./helloworld-0.0.${{ github.run_number }}-Darwin.zip

  create-release:
    needs: [build, build_macos] 
    runs-on: ubuntu-latest  
    steps:
      - name: Download Linux Asset
        uses: actions/download-artifact@v2
        with:
          name: linux-deb
          path: ./artifacts
      - name: Download macOS Asset
        uses: actions/download-artifact@v2
        with:
          name: macos-zip
          path: ./artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload macOS Release Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/helloworld-0.0.${{ github.run_number }}-Darwin.zip
          asset_name: helloworld-0.0.${{ github.run_number }}-Darwin.zip
          asset_content_type: application/zip